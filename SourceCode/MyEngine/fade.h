//*************************************************************************************************************
//
// フェード処理[fade.h]
// Author : Sekine Ikuto
//		 
//*****************************************************************************
#ifndef _FADE_H_
#define _FADE_H_

//-------------------------------------------------------------------------------------------------------------
// インクルードファイル
//-------------------------------------------------------------------------------------------------------------
#include "manager.h"

//-------------------------------------------------------------------------------------------------------------
// マクロ定義
//-------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------
// クラス定義
//-------------------------------------------------------------------------------------------------------------
class CFade
{
public:
	typedef enum
	{
		FADE_NONE = 0,		// 何もない状態
		FADE_IN,			// フェードイン処理
		FADE_OUT,			// フェードアウト処理
		FADE_MAX			// 最大数
	} FADE;

	CFade();								// コンストラクタ
	~CFade();								// デストラクタ
	static HRESULT Load(void);				// 読み込み
	static void Unload(void);				// 開放
	HRESULT Init(CManager::MODE mode);		// 初期化
	void Uninit(void);						// 終了
	void Update(void);						// 更新
	void Draw(void);						// 描画
	static CFade *Create(void);				// 生成
	bool SetFade(CManager::MODE mode);		// フェード設定
	FADE GetFadeState(void);				// フェード状態の取得
private:
	static LPDIRECT3DTEXTURE9		m_pTexture;		// テクスチャへのポインタ
	static LPDIRECT3DVERTEXBUFFER9	m_pVtxBuff;		// 頂点バッファへのポインタ
	D3DXCOLOR						m_col;			// 色
	D3DXVECTOR3						m_pos;			// 位置
	CManager::MODE					m_modeNext;		// 次のモード
	FADE							m_fadeState;	// フェード状態
};

#endif